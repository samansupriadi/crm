name: CI AND CD

on:
  push:
    branches:
      - demo
  pull_request:
    types: [closed]

jobs:

  code-quality:
    runs-on: ubuntu-latest
    env:
      SONAR_EXCLUSIONS: '**/*.html,**/*.phtml,**/*.css,**/*.js'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          projectBaseDir: "src/"
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}_${{ github.ref_name }}
            -Dsonar.exclusions=${{ env.SONAR_EXCLUSIONS }}

  Unit-Test:
    needs: code-quality
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
    
  # build-image:
  #   needs: Unit-Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
      
  #     - name: Build The Docker Image
  #       run: docker build . --file Dockerfile --tag my-app:$(date +%s)
  
  # push-image:
  #   needs: build-image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  Build-and-publish-image:
    #needs: Unit-Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest
      

     